(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{139:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return u}));var a=t(3),r=t(7),i=(t(0),t(144)),o=t(148),l={title:"Plugins"},c={unversionedId:"developers/plugins",id:"developers/plugins",isDocsHomePage:!1,title:"Plugins",description:"Plugins are the most efficient way to customize or change the default behavior of a chart. They have been introduced at version 2.1.0 (global plugins only) and extended at version 2.5.0 (per chart plugins and options).",source:"@site/docs/developers/plugins.md",slug:"/developers/plugins",permalink:"/docs/master/developers/plugins",editUrl:"https://github.com/chartjs/Chart.js/edit/master/docs/docs/developers/plugins.md",version:"current",sidebar:"someSidebar",previous:{title:"Updating Charts",permalink:"/docs/master/developers/updates"},next:{title:"New Charts",permalink:"/docs/master/developers/charts"}},s=[{value:"Using plugins",id:"using-plugins",children:[]},{value:"Global plugins",id:"global-plugins",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Plugin ID",id:"plugin-id",children:[]},{value:"Plugin options",id:"plugin-options",children:[]}]},{value:"Plugin Core API",id:"plugin-core-api",children:[{value:"Chart Initialization",id:"chart-initialization",children:[]},{value:"Chart Update",id:"chart-update",children:[]},{value:"Rendering",id:"rendering",children:[]}]}],p={toc:s};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Plugins are the most efficient way to customize or change the default behavior of a chart. They have been introduced at ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/chartjs/Chart.js/releases/tag/2.1.0"}),"version 2.1.0")," (global plugins only) and extended at ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/chartjs/Chart.js/releases/tag/v2.5.0"}),"version 2.5.0")," (per chart plugins and options)."),Object(i.b)("h2",{id:"using-plugins"},"Using plugins"),Object(i.b)("p",null,"Plugins can be shared between chart instances:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'var plugin = { /* plugin implementation */ };\n\n// chart1 and chart2 use "plugin"\nvar chart1 = new Chart(ctx, {\n    plugins: [plugin]\n});\n\nvar chart2 = new Chart(ctx, {\n    plugins: [plugin]\n});\n\n// chart3 doesn\'t use "plugin"\nvar chart3 = new Chart(ctx, {});\n')),Object(i.b)("p",null,"Plugins can also be defined directly in the chart ",Object(i.b)("inlineCode",{parentName:"p"},"plugins")," config (a.k.a. ",Object(i.b)("em",{parentName:"p"},"inline plugins"),"):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"var chart = new Chart(ctx, {\n    plugins: [{\n        beforeInit: function(chart, args, options) {\n            //..\n        }\n    }]\n});\n")),Object(i.b)("p",null,"However, this approach is not ideal when the customization needs to apply to many charts."),Object(i.b)("h2",{id:"global-plugins"},"Global plugins"),Object(i.b)("p",null,"Plugins can be registered globally to be applied on all charts (a.k.a. ",Object(i.b)("em",{parentName:"p"},"global plugins"),"):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"Chart.register({\n    // plugin implementation\n});\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Note: ",Object(i.b)("em",{parentName:"p"},"inline")," plugins can't be registered globally.")),Object(i.b)("h2",{id:"configuration"},"Configuration"),Object(i.b)("h3",{id:"plugin-id"},"Plugin ID"),Object(i.b)("p",null,"Plugins must define a unique id in order to be configurable."),Object(i.b)("p",null,"This id should follow the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.npmjs.com/files/package.json#name"}),"npm package name convention"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"can't start with a dot or an underscore"),Object(i.b)("li",{parentName:"ul"},"can't contain any non-URL-safe characters"),Object(i.b)("li",{parentName:"ul"},"can't contain uppercase letters"),Object(i.b)("li",{parentName:"ul"},"should be something short, but also reasonably descriptive")),Object(i.b)("p",null,"If a plugin is intended to be released publicly, you may want to check the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/search?q=chartjs-plugin-"}),"registry")," to see if there's something by that name already. Note that in this case, the package name should be prefixed by ",Object(i.b)("inlineCode",{parentName:"p"},"chartjs-plugin-")," to appear in Chart.js plugin registry."),Object(i.b)("h3",{id:"plugin-options"},"Plugin options"),Object(i.b)("p",null,"Plugin options are located under the ",Object(i.b)("inlineCode",{parentName:"p"},"options.plugins")," config and are scoped by the plugin ID: ",Object(i.b)("inlineCode",{parentName:"p"},"options.plugins.{plugin-id}"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"var chart = new Chart(ctx, {\n    options: {\n        foo: { ... },           // chart 'foo' option\n        plugins: {\n            p1: {\n                foo: { ... },   // p1 plugin 'foo' option\n                bar: { ... }\n            },\n            p2: {\n                foo: { ... },   // p2 plugin 'foo' option\n                bla: { ... }\n            }\n        }\n    }\n});\n")),Object(i.b)("h4",{id:"disable-plugins"},"Disable plugins"),Object(i.b)("p",null,"To disable a global plugin for a specific chart instance, the plugin options must be set to ",Object(i.b)("inlineCode",{parentName:"p"},"false"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"Chart.register({\n    id: 'p1',\n    // ...\n});\n\nvar chart = new Chart(ctx, {\n    options: {\n        plugins: {\n            p1: false   // disable plugin 'p1' for this instance\n        }\n    }\n});\n")),Object(i.b)("p",null,"To disable all plugins for a specific chart instance, set ",Object(i.b)("inlineCode",{parentName:"p"},"options.plugins")," to ",Object(i.b)("inlineCode",{parentName:"p"},"false"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"var chart = new Chart(ctx, {\n    options: {\n        plugins: false // all plugins are disabled for this instance\n    }\n});\n")),Object(i.b)("h2",{id:"plugin-core-api"},"Plugin Core API"),Object(i.b)("p",null,"Read more about the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/chartjs/Chart.js/blob/master/types/index.esm.d.ts#L733"}),"existing plugin extension hooks"),"."),Object(i.b)("h3",{id:"chart-initialization"},"Chart Initialization"),Object(i.b)("p",null,"Plugins are notified during the initialization process. These hooks can be used to setup data needed for the plugin to operate."),Object(i.b)("img",{alt:"Chart.js init flowchart",src:Object(o.a)("img/init_flowchart.png")}),Object(i.b)("h3",{id:"chart-update"},"Chart Update"),Object(i.b)("p",null,"Plugins are notified during throughout the update process."),Object(i.b)("img",{alt:"Chart.js update flowchart",src:Object(o.a)("img/update_flowchart.png")}),Object(i.b)("h3",{id:"rendering"},"Rendering"),Object(i.b)("p",null,"Plugins can interact with the chart throughout the render process. The rendering process is documented in the flowchart below. Each of the green processes is a plugin notification. The red lines indicate how cancelling part of the render process can occur when a plugin returns ",Object(i.b)("inlineCode",{parentName:"p"},"false")," from a hook. Not all hooks are cancelable, however, in general most ",Object(i.b)("inlineCode",{parentName:"p"},"before*")," hooks can be cancelled."),Object(i.b)("img",{alt:"Chart.js render pipeline flowchart",src:Object(o.a)("img/render_flowchart.png")}))}u.isMDXComponent=!0},144:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,h=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return t?r.a.createElement(h,l(l({ref:n},s),{},{components:t})):r.a.createElement(h,l({ref:n},s))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},148:function(e,n,t){"use strict";t.d(n,"b",(function(){return i})),t.d(n,"a",(function(){return o}));var a=t(22),r=t(154);function i(){var e=Object(a.default)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,i=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,a){var i=void 0===a?{}:a,o=i.forcePrependBaseUrl,l=void 0!==o&&o,c=i.absolute,s=void 0!==c&&c;if(!t)return t;if(t.startsWith("#"))return t;if(Object(r.b)(t))return t;if(l)return n+t;var p=t.startsWith(n)?t:n+t.replace(/^\//,"");return s?e+p:p}(i,t,e,n)}}}function o(e,n){return void 0===n&&(n={}),(0,i().withBaseUrl)(e,n)}},154:function(e,n,t){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}t.d(n,"b",(function(){return a})),t.d(n,"a",(function(){return r}))}}]);