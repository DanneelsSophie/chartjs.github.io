(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{128:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return o})),a.d(t,"ExampleChart0",(function(){return d})),a.d(t,"ExampleChart1",(function(){return p})),a.d(t,"default",(function(){return O}));var n=a(3),r=a(7),b=a(0),c=a(143),l={title:"Bar Chart"},i={unversionedId:"charts/bar",id:"charts/bar",isDocsHomePage:!1,title:"Bar Chart",description:"A bar chart provides a way of showing data values represented as vertical bars. It is sometimes used to show trend data, and the comparison of multiple data sets side by side.",source:"@site/docs/charts/bar.mdx",slug:"/charts/bar",permalink:"/docs/master/charts/bar",editUrl:"https://github.com/chartjs/Chart.js/edit/master/docs/docs/charts/bar.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Line Chart",permalink:"/docs/master/charts/line"},next:{title:"Radar Chart",permalink:"/docs/master/charts/radar"}},o=[{value:"Example Usage",id:"example-usage",children:[]},{value:"Dataset Properties",id:"dataset-properties",children:[{value:"General",id:"general",children:[]},{value:"Styling",id:"styling",children:[]},{value:"Interactions",id:"interactions",children:[]}]},{value:"Dataset Configuration",id:"dataset-configuration",children:[{value:"Example dataset configuration",id:"example-dataset-configuration",children:[]},{value:"barThickness",id:"barthickness",children:[]}]},{value:"Config Options",id:"config-options",children:[]},{value:"Scale Configuration",id:"scale-configuration",children:[{value:"Example scale configuration",id:"example-scale-configuration",children:[]},{value:"Offset Grid Lines",id:"offset-grid-lines",children:[]}]},{value:"Default Options",id:"default-options",children:[]},{value:"barPercentage vs categoryPercentage",id:"barpercentage-vs-categorypercentage",children:[]},{value:"Data Structure",id:"data-structure",children:[]},{value:"Stacked Bar Chart",id:"stacked-bar-chart",children:[]},{value:"Horizontal Bar Chart",id:"horizontal-bar-chart",children:[]},{value:"Example",id:"example",children:[{value:"Horizontal Bar Chart config Options",id:"horizontal-bar-chart-config-options",children:[]}]},{value:"Internal data format",id:"internal-data-format",children:[]}],d=function(){return Object(b.useEffect)((function(){var e=new Chart(document.getElementById("chartjs-0").getContext("2d"),{type:"bar",data:{labels:["January","February","March","April","May","June","July"],datasets:[{label:"My First Dataset",data:[65,59,80,81,56,55,40],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(255, 159, 64, 0.2)","rgba(255, 205, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(54, 162, 235, 0.2)","rgba(153, 102, 255, 0.2)","rgba(201, 203, 207, 0.2)"],borderColor:["rgb(255, 99, 132)","rgb(255, 159, 64)","rgb(255, 205, 86)","rgb(75, 192, 192)","rgb(54, 162, 235)","rgb(153, 102, 255)","rgb(201, 203, 207)"],borderWidth:1}]},options:{scales:{y:{beginAtZero:!0}}}});return function(){return e.destroy()}})),Object(c.b)("div",{className:"chartjs-wrapper"},Object(c.b)("canvas",{id:"chartjs-0",className:"chartjs"}))},p=function(){return Object(b.useEffect)((function(){var e=new Chart(document.getElementById("chartjs-1").getContext("2d"),{type:"bar",data:{labels:["January","February","March","April","May","June","July"],datasets:[{axis:"y",label:"My First Dataset",data:[65,59,80,81,56,55,40],fill:!1,backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(255, 159, 64, 0.2)","rgba(255, 205, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(54, 162, 235, 0.2)","rgba(153, 102, 255, 0.2)","rgba(201, 203, 207, 0.2)"],borderColor:["rgb(255, 99, 132)","rgb(255, 159, 64)","rgb(255, 205, 86)","rgb(75, 192, 192)","rgb(54, 162, 235)","rgb(153, 102, 255)","rgb(201, 203, 207)"],borderWidth:1}]},options:{indexAxis:"y",scales:{x:{beginAtZero:!0}}}});return function(){return e.destroy()}})),Object(c.b)("div",{className:"chartjs-wrapper"},Object(c.b)("canvas",{id:"chartjs-1",className:"chartjs"}))},j={toc:o,ExampleChart0:d,ExampleChart1:p};function O(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},j,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"A bar chart provides a way of showing data values represented as vertical bars. It is sometimes used to show trend data, and the comparison of multiple data sets side by side."),Object(c.b)(d,{mdxType:"ExampleChart0"}),Object(c.b)("h2",{id:"example-usage"},"Example Usage"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var myBarChart = new Chart(ctx, {\n    type: 'bar',\n    data: data,\n    options: options\n});\n")),Object(c.b)("h2",{id:"dataset-properties"},"Dataset Properties"),Object(c.b)("p",null,"The bar chart allows a number of properties to be specified for each dataset.\nThese are used to set display properties for a specific dataset. For example,\nthe color of the bars is generally set this way."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(c.b)("a",Object(n.a)({parentName:"th"},{href:"/docs/master/general/options#scriptable-options"}),"Scriptable")),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(c.b)("a",Object(n.a)({parentName:"th"},{href:"/docs/master/general/options#indexable-options"}),"Indexable")),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#styling"}),Object(c.b)("inlineCode",{parentName:"a"},"backgroundColor"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/master/general/colors"}),Object(c.b)("inlineCode",{parentName:"a"},"Color"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"'rgba(0, 0, 0, 0.1)'"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"base"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#styling"}),Object(c.b)("inlineCode",{parentName:"a"},"borderColor"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/master/general/colors"}),Object(c.b)("inlineCode",{parentName:"a"},"Color"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"'rgba(0, 0, 0, 0.1)'"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#borderskipped"}),Object(c.b)("inlineCode",{parentName:"a"},"borderSkipped"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"'start'"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#borderwidth"}),Object(c.b)("inlineCode",{parentName:"a"},"borderWidth"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number"),"|",Object(c.b)("inlineCode",{parentName:"td"},"object")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"0"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#borderradius"}),Object(c.b)("inlineCode",{parentName:"a"},"borderRadius"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number"),"|",Object(c.b)("inlineCode",{parentName:"td"},"object")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"0"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"clip"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number"),"|",Object(c.b)("inlineCode",{parentName:"td"},"object")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"undefined"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#data-structure"}),Object(c.b)("inlineCode",{parentName:"a"},"data"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"object"),"|",Object(c.b)("inlineCode",{parentName:"td"},"object[]"),"|",Object(c.b)("inlineCode",{parentName:"td"},"number[]"),"|",Object(c.b)("inlineCode",{parentName:"td"},"string[]")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"required"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#interactions"}),Object(c.b)("inlineCode",{parentName:"a"},"hoverBackgroundColor"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/master/general/colors"}),Object(c.b)("inlineCode",{parentName:"a"},"Color"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"undefined"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#interactions"}),Object(c.b)("inlineCode",{parentName:"a"},"hoverBorderColor"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/master/general/colors"}),Object(c.b)("inlineCode",{parentName:"a"},"Color"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"undefined"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#interactions"}),Object(c.b)("inlineCode",{parentName:"a"},"hoverBorderWidth"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"1"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#interactions"}),Object(c.b)("inlineCode",{parentName:"a"},"hoverBorderRadius"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"0"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"indexAxis"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"'x'"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"label"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"''"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"order"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"0"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/master/configuration/elements#point-styles"}),Object(c.b)("inlineCode",{parentName:"a"},"pointStyle"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string"),"|",Object(c.b)("inlineCode",{parentName:"td"},"Image")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"'circle'"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"xAxisID"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"first x axis")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#general"}),Object(c.b)("inlineCode",{parentName:"a"},"yAxisID"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"first y axis")))),Object(c.b)("h3",{id:"general"},"General"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"base")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Base value for the bar in data units along the value axis. If not set, defaults to the value axis base value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"clip")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"How to clip relative to chartArea. Positive value allows overflow, negative value clips that many pixels inside chartArea. ",Object(c.b)("inlineCode",{parentName:"td"},"0")," = clip at chartArea. Clipping can also be configured per side: ",Object(c.b)("inlineCode",{parentName:"td"},"clip: {left: 5, top: false, right: -2, bottom: 0}"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"indexAxis")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The base axis of the dataset. ",Object(c.b)("inlineCode",{parentName:"td"},"'x'")," for vertical bars and ",Object(c.b)("inlineCode",{parentName:"td"},"'y'")," for horizontal bars.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"label")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The label for the dataset which appears in the legend and tooltips.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"order")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The drawing order of dataset. Also affects order for stacking, tooltip, and legend.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"xAxisID")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The ID of the x-axis to plot this dataset on.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"yAxisID")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The ID of the y-axis to plot this dataset on.")))),Object(c.b)("h3",{id:"styling"},"Styling"),Object(c.b)("p",null,"The style of each bar can be controlled with the following properties:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"backgroundColor")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar background color.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"borderColor")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar border color.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#borderskipped"}),Object(c.b)("inlineCode",{parentName:"a"},"borderSkipped"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The edge to skip when drawing bar.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#borderwidth"}),Object(c.b)("inlineCode",{parentName:"a"},"borderWidth"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar border width (in pixels).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#borderradius"}),Object(c.b)("inlineCode",{parentName:"a"},"borderRadius"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar border radius (in pixels).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"pointStyle")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Style of the point for legend. ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/master/configuration/elements#point-styles"}),"more..."))))),Object(c.b)("p",null,"All these values, if ",Object(c.b)("inlineCode",{parentName:"p"},"undefined"),", fallback to the associated ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/master/configuration/elements#bar-configuration"}),Object(c.b)("inlineCode",{parentName:"a"},"elements.bar.*"))," options."),Object(c.b)("h4",{id:"borderskipped"},"borderSkipped"),Object(c.b)("p",null,"This setting is used to avoid drawing the bar stroke at the base of the fill, or disable the border radius.\nIn general, this does not need to be changed except when creating chart types\nthat derive from a bar chart."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note:")," for negative bars in a vertical chart, ",Object(c.b)("inlineCode",{parentName:"p"},"top")," and ",Object(c.b)("inlineCode",{parentName:"p"},"bottom")," are flipped. Same goes for ",Object(c.b)("inlineCode",{parentName:"p"},"left")," and ",Object(c.b)("inlineCode",{parentName:"p"},"right")," in a horizontal chart."),Object(c.b)("p",null,"Options are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"'start'")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"'end'")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"'bottom'")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"'left'")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"'top'")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"'right'")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"false"))),Object(c.b)("h4",{id:"borderwidth"},"borderWidth"),Object(c.b)("p",null,"If this value is a number, it is applied to all sides of the rectangle (left, top, right, bottom), except ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#borderskipped"}),Object(c.b)("inlineCode",{parentName:"a"},"borderSkipped")),". If this value is an object, the ",Object(c.b)("inlineCode",{parentName:"p"},"left")," property defines the left border width. Similarly, the ",Object(c.b)("inlineCode",{parentName:"p"},"right"),", ",Object(c.b)("inlineCode",{parentName:"p"},"top"),", and ",Object(c.b)("inlineCode",{parentName:"p"},"bottom")," properties can also be specified. Omitted borders and ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#borderskipped"}),Object(c.b)("inlineCode",{parentName:"a"},"borderSkipped"))," are skipped."),Object(c.b)("h4",{id:"borderradius"},"borderRadius"),Object(c.b)("p",null,"If this value is a number, it is applied to all corners of the rectangle (topLeft, topRight, bottomLeft, bottomRight), except corners touching the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#borderskipped"}),Object(c.b)("inlineCode",{parentName:"a"},"borderSkipped")),". If this value is an object, the ",Object(c.b)("inlineCode",{parentName:"p"},"topLeft")," property defines the top-left corners border radius. Similarly, the ",Object(c.b)("inlineCode",{parentName:"p"},"topRight"),", ",Object(c.b)("inlineCode",{parentName:"p"},"bottomLeft"),", and ",Object(c.b)("inlineCode",{parentName:"p"},"bottomRight")," properties can also be specified. Omitted corners and those touching the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#borderskipped"}),Object(c.b)("inlineCode",{parentName:"a"},"borderSkipped"))," are skipped. For example if the ",Object(c.b)("inlineCode",{parentName:"p"},"top")," border is skipped, the border radius for the corners ",Object(c.b)("inlineCode",{parentName:"p"},"topLeft")," and ",Object(c.b)("inlineCode",{parentName:"p"},"topRight")," will be skipped as well."),Object(c.b)("h3",{id:"interactions"},"Interactions"),Object(c.b)("p",null,"The interaction with each bar can be controlled with the following properties:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"hoverBackgroundColor")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar background color when hovered.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"hoverBorderColor")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar border color when hovered.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"hoverBorderWidth")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar border width when hovered (in pixels).")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"hoverBorderRadius")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The bar border radius when hovered (in pixels).")))),Object(c.b)("p",null,"All these values, if ",Object(c.b)("inlineCode",{parentName:"p"},"undefined"),", fallback to the associated ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/master/configuration/elements#bar-configuration"}),Object(c.b)("inlineCode",{parentName:"a"},"elements.bar.*"))," options."),Object(c.b)("h2",{id:"dataset-configuration"},"Dataset Configuration"),Object(c.b)("p",null,"The bar chart accepts the following configuration from the associated dataset options:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"barPercentage")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"0.9")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Percent (0-1) of the available width each bar should be within the category width. 1.0 will take the whole category width and put the bars right next to each other. ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#barpercentage-vs-categorypercentage"}),"more..."))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"categoryPercentage")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"0.8")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Percent (0-1) of the available width each category should be within the sample width. ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#barpercentage-vs-categorypercentage"}),"more..."))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"barThickness")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number"),"|",Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Manually set width of each bar in pixels. If set to ",Object(c.b)("inlineCode",{parentName:"td"},"'flex'"),', it computes "optimal" sample widths that globally arrange bars side by side. If not set (default), bars are equally sized based on the smallest interval. ',Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#barthickness"}),"more..."))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"base")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Base value for the bar in data units along the value axis. If not set, defaults to the value axis base value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"maxBarThickness")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Set this to ensure that bars are not sized thicker than this.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"minBarLength")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Set this to ensure that bars have a minimum length in pixels.")))),Object(c.b)("h3",{id:"example-dataset-configuration"},"Example dataset configuration"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"data: {\n    datasets: [{\n        barPercentage: 0.5,\n        barThickness: 6,\n        maxBarThickness: 8,\n        minBarLength: 2,\n        data: [10, 20, 30, 40, 50, 60, 70]\n    }]\n};\n")),Object(c.b)("h3",{id:"barthickness"},"barThickness"),Object(c.b)("p",null,"If this value is a number, it is applied to the width of each bar, in pixels. When this is enforced, ",Object(c.b)("inlineCode",{parentName:"p"},"barPercentage")," and ",Object(c.b)("inlineCode",{parentName:"p"},"categoryPercentage")," are ignored."),Object(c.b)("p",null,"If set to ",Object(c.b)("inlineCode",{parentName:"p"},"'flex'"),", the base sample widths are calculated automatically based on the previous and following samples so that they take the full available widths without overlap. Then, bars are sized using ",Object(c.b)("inlineCode",{parentName:"p"},"barPercentage")," and ",Object(c.b)("inlineCode",{parentName:"p"},"categoryPercentage"),". There is no gap when the percentage options are 1. This mode generates bars with different widths when data are not evenly spaced."),Object(c.b)("p",null,"If not set (default), the base sample widths are calculated using the smallest interval that prevents bar overlapping, and bars are sized using ",Object(c.b)("inlineCode",{parentName:"p"},"barPercentage")," and ",Object(c.b)("inlineCode",{parentName:"p"},"categoryPercentage"),". This mode always generates bars equally sized."),Object(c.b)("h2",{id:"config-options"},"Config Options"),Object(c.b)("p",null,"These are the customisation options specific to Bar charts. These options are looked up on access, and form together with the global chart configuration, ",Object(c.b)("inlineCode",{parentName:"p"},"Chart.defaults"),", the options of the chart."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"skipNull")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"boolean")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"undefined")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If ",Object(c.b)("inlineCode",{parentName:"td"},"true"),", null or undefined values will not be drawn")))),Object(c.b)("h2",{id:"scale-configuration"},"Scale Configuration"),Object(c.b)("p",null,"The bar chart sets unique default values for the following configuration from the associated ",Object(c.b)("inlineCode",{parentName:"p"},"scale")," options:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"offset")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"boolean")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"true")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If true, extra space is added to both edges and the axis is scaled to fit into the chart area.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"grid.offset")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"boolean")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"true")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If true, the bars for a particular data point fall between the grid lines. The grid line will move to the left by one half of the tick interval. If false, the grid line will go right down the middle of the bars. ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"#offsetgridlines"}),"more..."))))),Object(c.b)("h3",{id:"example-scale-configuration"},"Example scale configuration"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"options = {\n    scales: {\n        x: {\n            grid: {\n              offset: true\n            }\n        }\n    }\n};\n")),Object(c.b)("h3",{id:"offset-grid-lines"},"Offset Grid Lines"),Object(c.b)("p",null,"If true, the bars for a particular data point fall between the grid lines. The grid line will move to the left by one half of the tick interval, which is the space between the grid lines. If false, the grid line will go right down the middle of the bars. This is set to true for a category scale in a bar chart while false for other scales or chart types by default."),Object(c.b)("h2",{id:"default-options"},"Default Options"),Object(c.b)("p",null,"It is common to want to apply a configuration setting to all created bar charts. The global bar chart settings are stored in ",Object(c.b)("inlineCode",{parentName:"p"},"Chart.overrides.bar"),". Changing the global options only affects charts created after the change. Existing charts are not changed."),Object(c.b)("h2",{id:"barpercentage-vs-categorypercentage"},"barPercentage vs categoryPercentage"),Object(c.b)("p",null,"The following shows the relationship between the bar percentage option and the category percentage option."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"// categoryPercentage: 1.0\n// barPercentage: 1.0\nBar:        | 1.0 | 1.0 |\nCategory:   |    1.0    |\nSample:     |===========|\n\n// categoryPercentage: 1.0\n// barPercentage: 0.5\nBar:          |.5|  |.5|\nCategory:  |      1.0     |\nSample:    |==============|\n\n// categoryPercentage: 0.5\n// barPercentage: 1.0\nBar:             |1.0||1.0|\nCategory:        |   .5   |\nSample:     |==================|\n")),Object(c.b)("h2",{id:"data-structure"},"Data Structure"),Object(c.b)("p",null,"All of the supported ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/master/general/data-structures"}),"data structures")," can be used with bar charts."),Object(c.b)("h2",{id:"stacked-bar-chart"},"Stacked Bar Chart"),Object(c.b)("p",null,"Bar charts can be configured into stacked bar charts by changing the settings on the X and Y axes to enable stacking. Stacked bar charts can be used to show how one data series is made up of a number of smaller pieces."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var stackedBar = new Chart(ctx, {\n    type: 'bar',\n    data: data,\n    options: {\n        scales: {\n            x: {\n                stacked: true\n            },\n            y: {\n                stacked: true\n            }\n        }\n    }\n});\n")),Object(c.b)("p",null,"The following dataset properties are specific to stacked bar charts."),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"stack")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The ID of the group to which this dataset belongs to (when stacked, each group will be a separate stack).")))),Object(c.b)("h2",{id:"horizontal-bar-chart"},"Horizontal Bar Chart"),Object(c.b)("p",null,"A horizontal bar chart is a variation on a vertical bar chart. It is sometimes used to show trend data, and the comparison of multiple data sets side by side.\nTo achieve this you will have to set the ",Object(c.b)("inlineCode",{parentName:"p"},"indexAxis")," property in the options object to ",Object(c.b)("inlineCode",{parentName:"p"},"'y'"),".\nThe default for this property is ",Object(c.b)("inlineCode",{parentName:"p"},"'x'")," and thus will show vertical bars."),Object(c.b)(p,{mdxType:"ExampleChart1"}),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var myBarChart = new Chart(ctx, {\n    type: 'bar',\n    data: data,\n    options: {\n      indexAxis: 'y'\n    }\n});\n")),Object(c.b)("h3",{id:"horizontal-bar-chart-config-options"},"Horizontal Bar Chart config Options"),Object(c.b)("p",null,"The configuration options for the horizontal bar chart are the same as for the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#scale-configuration"}),"bar chart"),". However, any options specified on the x-axis in a bar chart, are applied to the y-axis in a horizontal bar chart."),Object(c.b)("h2",{id:"internal-data-format"},"Internal data format"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"{x, y, _custom}")," where ",Object(c.b)("inlineCode",{parentName:"p"},"_custom")," is an optional object defining stacked bar properties: ",Object(c.b)("inlineCode",{parentName:"p"},"{start, end, barStart, barEnd, min, max}"),". ",Object(c.b)("inlineCode",{parentName:"p"},"start")," and ",Object(c.b)("inlineCode",{parentName:"p"},"end")," are the input values. Those two are repeated in ",Object(c.b)("inlineCode",{parentName:"p"},"barStart")," (closer to origin), ",Object(c.b)("inlineCode",{parentName:"p"},"barEnd")," (further from origin), ",Object(c.b)("inlineCode",{parentName:"p"},"min")," and ",Object(c.b)("inlineCode",{parentName:"p"},"max"),"."))}O.isMDXComponent=!0},143:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return s}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),d=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=d(a),O=n,s=p["".concat(c,".").concat(O)]||p[O]||j[O]||b;return a?r.a.createElement(s,l(l({ref:t},o),{},{components:a})):r.a.createElement(s,l({ref:t},o))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=O;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var o=2;o<b;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);