(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{113:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return p}));var r=a(3),n=a(7),c=(a(0),a(143)),s={title:"Scatter Chart"},o={unversionedId:"charts/scatter",id:"charts/scatter",isDocsHomePage:!1,title:"Scatter Chart",description:"Scatter charts are based on basic line charts with the x axis changed to a linear axis. To use a scatter chart, data must be passed as objects containing X and Y properties. The example below creates a scatter chart with 4 points.",source:"@site/docs/charts/scatter.mdx",slug:"/charts/scatter",permalink:"/docs/next/charts/scatter",editUrl:"https://github.com/chartjs/Chart.js/edit/master/docs/docs/charts/scatter.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Bubble Chart",permalink:"/docs/next/charts/bubble"},next:{title:"Area Chart",permalink:"/docs/next/charts/area"}},i=[{value:"Dataset Properties",id:"dataset-properties",children:[]},{value:"Data Structure",id:"data-structure",children:[]},{value:"Internal data format",id:"internal-data-format",children:[]}],l={toc:i};function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Scatter charts are based on basic line charts with the x axis changed to a linear axis. To use a scatter chart, data must be passed as objects containing X and Y properties. The example below creates a scatter chart with 4 points."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"function example() {\n  const canvas = useRef(null);\n  useEffect(() => {\n    const cfg = {\n        type: 'scatter',\n        data: {\n            datasets: [{\n                label: 'Scatter Dataset',\n                data: [{\n                    x: -10,\n                    y: 0\n                }, {\n                    x: 0,\n                    y: 10\n                }, {\n                    x: 10,\n                    y: 5\n                }, {\n                    x: 0.5,\n                    y: 5.5\n                }],\n                backgroundColor: 'rgb(255, 99, 132)'\n            }],\n        },\n        options: {\n            scales: {\n                x: {\n                    type: 'linear',\n                    position: 'bottom'\n                }\n            }\n        }\n    };\n    const chart = new Chart(canvas.current.getContext('2d'), cfg);\n    return () => chart.destroy();\n  });\n  return <div className=\"chartjs-wrapper\"><canvas ref={canvas} className=\"chartjs\"></canvas></div>;\n}\n")),Object(c.b)("h2",{id:"dataset-properties"},"Dataset Properties"),Object(c.b)("p",null,"The scatter chart supports all of the same properties as the ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/next/charts/line#dataset-properties"}),"line chart"),".\nBy default, the scatter chart will override the showLine property of the line chart to ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"."),Object(c.b)("p",null,"The index scale is of the type ",Object(c.b)("inlineCode",{parentName:"p"},"linear"),". This means if you are using the labels array the values have to be numbers or parsable to numbers, the same applies to the object format for the keys."),Object(c.b)("h2",{id:"data-structure"},"Data Structure"),Object(c.b)("p",null,"Unlike the line chart where data can be supplied in two different formats, the scatter chart only accepts data in a point format."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"data: [{\n        x: 10,\n        y: 20\n    }, {\n        x: 15,\n        y: 10\n    }]\n")),Object(c.b)("h2",{id:"internal-data-format"},"Internal data format"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"{x, y}")))}p.isMDXComponent=!0},143:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return h}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=n.a.createContext({}),p=function(e){var t=n.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,h=u["".concat(s,".").concat(d)]||u[d]||b[d]||c;return a?n.a.createElement(h,o(o({ref:t},l),{},{components:a})):n.a.createElement(h,o({ref:t},l))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,s=new Array(c);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<c;l++)s[l]=a[l];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);